{"version":3,"sources":["SortingAlgorithms/sortingAlgorithm.js","SortingVisualizer/SortingVisualizer.jsx","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getBubbleSortAnimations","arr","temp","console","log","bubbleSort","getQuickSortAnimations","QuickSort","lo","hi","pi","pivot","partition","ANIMATION_SPEED_MS","PRIMARY_COLOR","SortingVisualizer","props","state","this","resetArray","min","max","random","setState","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","barOneHeight","barTwoHeight","selectionSort","insertionSort","href","class","className","map","value","idx","onClick","mergeSort","quickSort","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a86f9c69.chunk.js","sourcesContent":["// Merge Sort with help of clementmihailescu\nexport function getMergeSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n  }\n  \n  function mergeSortHelper(\n    mainArray,\n    startIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n  }\n  \n  function doMerge(\n    mainArray,\n    startIdx,\n    middleIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n      animations.push([i, j]);\n      animations.push([i, j]);\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n        animations.push([k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n      } else {\n        animations.push([k, auxiliaryArray[j]]);\n        mainArray[k++] = auxiliaryArray[j++];\n      }\n    }\n    while (i <= middleIdx) {\n      animations.push([i, i]);\n      animations.push([i, i]);\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n      animations.push([j, j]);\n      animations.push([j, j]);\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n\n\n// Bubble Sort\n  export function getBubbleSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    return bubbleSort(array, animations);\n  }\n\n  function bubbleSort(arr,animations){\n    for(var i=1;i<=arr.length-1;i++){\n        for(var j=0;j<arr.length-i;j++){\n            if(arr[j+1]<arr[j]){\n                animations.push([j,j+1,arr[j],arr[j+1]]);\n                var temp = arr[j+1];\n                arr[j+1] = arr[j];\n                arr[j] = temp   \n            }\n        }\n    }\n    console.log(animations)\n    return animations;\n  }\n\n\n//Quick Sort\n  export function getQuickSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  return QuickSort(array,0,array.length-1, animations);\n}\nfunction QuickSort(arr,lo,hi,animations){\n    if(lo>=hi){\n        return;\n    }\n    var pivot = arr[hi];\n    var pi = partition(arr,pivot,lo,hi,animations)\n    QuickSort(arr,lo,pi-1,animations);\n    QuickSort(arr,pi+1,hi,animations);\n    return animations;\n}\n\nfunction partition(arr, pivot,lo,hi,animations) {\n    var i = lo, j = lo;\n    while (i <= hi) {\n      if (arr[i] <= pivot) {\n        animations.push([i,j,arr[i],arr[j]])\n        var temp = arr[i];\n        arr[i] = arr[j];\n        arr[j] = temp;\n        i++;\n        j++;\n      } else {\n        i++;\n      }\n    }\n    return (j - 1);\n  }\n\n  //Selection Sort\n  export function getSelectionSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    return selectionSort(array, animations);\n  }\n\n  function selectionSort(arr,animations){\n    for(var i=0;i<arr.length-1;i++){\n        var min = i;\n        for(var j=i+1;j<arr.length;j++){\n            if(arr[j]<arr[min]){\n                min = j;\n            }\n        }\n        animations.push([i,min,arr[i],arr[min]])\n        var temp = arr[i];\n        arr[i] = arr[min];\n        arr[min] =temp;\n    }\n    return animations;\n  }\n\n\n  //Insertion sort\n  export function getInsertionSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    return insertionSort(array, animations);\n  }\n\n  function insertionSort(arr,animations){\n    for(var i=1;i<arr.length;i++){\n        for(var j=i-1;j>=0;j--){\n            if(arr[j]>arr[j+1]){\n                animations.push([j,j+1,arr[j],arr[j+1]])\n                var temp = arr[j];\n                arr[j] = arr[j+1];\n                arr[j+1] =temp;\n            }else{\n                break;\n            }\n        }\n    }\n    return animations;\n  }\n\n","import React from 'react';\nimport './SortingVisualizer.css'\nimport { getBubbleSortAnimations, getInsertionSortAnimations, getMergeSortAnimations, getQuickSortAnimations, getSelectionSortAnimations } from '../SortingAlgorithms/sortingAlgorithm'\n\n//window.screen.width / 3 - 250\nconst NUMBER_OF_ARRAY_BARS = 100;\nconst ANIMATION_SPEED_MS = 20;\nconst PRIMARY_COLOR = '#8ab6d6';\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    resetArray() {\n        const array = [];\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n            array.push(randomIntFromInterval(5, 730));\n        }\n        this.setState({ array });\n    }\n    //merge Sort\n    mergeSort() {\n        const animations = getMergeSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            const isColorChange = i % 3 !== 2;\n            if (isColorChange) {\n                const [barOneIdx, barTwoIdx] = animations[i];\n                const barOneStyle = arrayBars[barOneIdx].style;\n                const barTwoStyle = arrayBars[barTwoIdx].style;\n                const color = i % 3 === 0 ? PRIMARY_COLOR : PRIMARY_COLOR;\n                setTimeout(() => {\n                    barOneStyle.backgroundColor = color;\n                    barTwoStyle.backgroundColor = color;\n                }, i * ANIMATION_SPEED_MS);\n            } else {\n                setTimeout(() => {\n                    const [barOneIdx, newHeight] = animations[i];\n                    const barOneStyle = arrayBars[barOneIdx].style;\n                    barOneStyle.height = `${newHeight}px`;\n                }, i * ANIMATION_SPEED_MS);\n            }\n        }\n    }\n    //bubble Sort\n    bubbleSort() {\n        const animations = getBubbleSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            var properties = animations[i];\n            const [barOneIdx, barTwoIdx, barOneHeight, barTwoHeight] = properties;\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            setTimeout(() => {\n                barOneStyle.height = `${barTwoHeight}px`;\n                barTwoStyle.height = `${barOneHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n        }\n    }\n    //quick Sort\n    quickSort() {\n        const animations = getQuickSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            var properties = animations[i];\n            const [barOneIdx, barTwoIdx, barOneHeight, barTwoHeight] = properties;\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            setTimeout(() => {\n                barOneStyle.height = `${barTwoHeight}px`;\n                barTwoStyle.height = `${barOneHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n        }\n    }\n    //selection Sort\n    selectionSort() {\n        const animations = getSelectionSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            var properties = animations[i];\n            const [barOneIdx, barTwoIdx, barOneHeight, barTwoHeight] = properties;\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            setTimeout(() => {\n                barOneStyle.height = `${barTwoHeight}px`;\n                barTwoStyle.height = `${barOneHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n        }\n    }\n    //insertion Sort\n    insertionSort() {\n        const animations = getInsertionSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n            const arrayBars = document.getElementsByClassName('array-bar');\n            var properties = animations[i];\n            const [barOneIdx, barTwoIdx, barOneHeight, barTwoHeight] = properties;\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            setTimeout(() => {\n                barOneStyle.height = `${barTwoHeight}px`;\n                barTwoStyle.height = `${barOneHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n        }\n    }\n\n\n    render() {\n        const { array } = this.state;\n        return (\n\n            < body >\n\n                <nav>\n                    <ul>\n                        <li><a href=\"#visualizer\">Sorting Visualizer <i class=\"fas fa-signal\"></i></a></li>\n                        <li className=\"lil\"><a href=\"mailto:asmohitt@gmail.com\" class=\"fa fa-google\"> </a></li>\n                        <li className=\"lil\"><a href=\"https://www.linkedin.com/in/moh1tt\" class=\"fa fa-linkedin\"> </a></li>\n                        <li className=\"lil\"><a href=\"https://www.instagram.com/moh1tt/\" class=\"fa fa-instagram\"> </a></li>\n                        <li className=\"lil\"><a href=\"#moh1tt\">@author Moh1tt</a></li>\n                    </ul>\n                </nav>\n                <div className=\"array-container\">\n                    {array.map((value, idx) => (\n                        <div\n                            className=\"array-bar\"\n                            key={idx}\n                            style={{\n                                backgroundColor: PRIMARY_COLOR,\n                                height: `${value}px`,\n                            }}></div>\n                    ))}\n                    <br />\n                    <br />\n                    <button onClick={() => this.resetArray()}>Generate New Array</button>\n                    <button onClick={() => this.mergeSort()}>Merge Sort</button>\n                    <button onClick={() => this.quickSort()}>Quick Sort</button>\n                    <button onClick={() => this.selectionSort()}>Selection Sort</button>\n                    <button onClick={() => this.insertionSort()}>Insertion Sort</button>\n                    <button onClick={() => this.bubbleSort()}>Bubble Sort</button>\n\n\n                </div>\n            </body >\n\n\n\n\n\n        );\n    }\n\n\n}\nfunction randomIntFromInterval(min, max) {\n    // min and max included\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","import React from 'react';\nimport './App.css';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer></SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}